/*
 * Tep.Sales.Service API
 * Tep.Sales.Service API
 *
 * OpenAPI spec version: v1
 * Contact: admin@tecnoepec.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TepsalesserviceApi);
  }
}(this, function(expect, TepsalesserviceApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DatabaseQueries', function() {
      beforeEach(function() {
        instance = new TepsalesserviceApi.DatabaseQueries();
      });

      it('should create an instance of DatabaseQueries', function() {
        // TODO: update the code to test DatabaseQueries
        expect(instance).to.be.a(TepsalesserviceApi.DatabaseQueries);
      });

      it('should have the property queryAddresses (base name: "queryAddresses")', function() {
        // TODO: update the code to test the property queryAddresses
        expect(instance).to.have.property('queryAddresses');
        // expect(instance.queryAddresses).to.be(expectedValueLiteral);
      });

      it('should have the property queryAddressesIsEnable (base name: "queryAddressesIsEnable")', function() {
        // TODO: update the code to test the property queryAddressesIsEnable
        expect(instance).to.have.property('queryAddressesIsEnable');
        // expect(instance.queryAddressesIsEnable).to.be(expectedValueLiteral);
      });

      it('should have the property queryClients (base name: "queryClients")', function() {
        // TODO: update the code to test the property queryClients
        expect(instance).to.have.property('queryClients');
        // expect(instance.queryClients).to.be(expectedValueLiteral);
      });

      it('should have the property queryClientsIsEnable (base name: "queryClientsIsEnable")', function() {
        // TODO: update the code to test the property queryClientsIsEnable
        expect(instance).to.have.property('queryClientsIsEnable');
        // expect(instance.queryClientsIsEnable).to.be(expectedValueLiteral);
      });

      it('should have the property queryFreightTables (base name: "queryFreightTables")', function() {
        // TODO: update the code to test the property queryFreightTables
        expect(instance).to.have.property('queryFreightTables');
        // expect(instance.queryFreightTables).to.be(expectedValueLiteral);
      });

      it('should have the property queryFreightTablesIsEnable (base name: "queryFreightTablesIsEnable")', function() {
        // TODO: update the code to test the property queryFreightTablesIsEnable
        expect(instance).to.have.property('queryFreightTablesIsEnable');
        // expect(instance.queryFreightTablesIsEnable).to.be(expectedValueLiteral);
      });

      it('should have the property queryPaymentConditions (base name: "queryPaymentConditions")', function() {
        // TODO: update the code to test the property queryPaymentConditions
        expect(instance).to.have.property('queryPaymentConditions');
        // expect(instance.queryPaymentConditions).to.be(expectedValueLiteral);
      });

      it('should have the property queryPaymentConditionsIsEnable (base name: "queryPaymentConditionsIsEnable")', function() {
        // TODO: update the code to test the property queryPaymentConditionsIsEnable
        expect(instance).to.have.property('queryPaymentConditionsIsEnable');
        // expect(instance.queryPaymentConditionsIsEnable).to.be(expectedValueLiteral);
      });

      it('should have the property queryPaymentPriceTables (base name: "queryPaymentPriceTables")', function() {
        // TODO: update the code to test the property queryPaymentPriceTables
        expect(instance).to.have.property('queryPaymentPriceTables');
        // expect(instance.queryPaymentPriceTables).to.be(expectedValueLiteral);
      });

      it('should have the property queryPaymentPriceTablesIsEnable (base name: "queryPaymentPriceTablesIsEnable")', function() {
        // TODO: update the code to test the property queryPaymentPriceTablesIsEnable
        expect(instance).to.have.property('queryPaymentPriceTablesIsEnable');
        // expect(instance.queryPaymentPriceTablesIsEnable).to.be(expectedValueLiteral);
      });

      it('should have the property queryPriceTableItems (base name: "queryPriceTableItems")', function() {
        // TODO: update the code to test the property queryPriceTableItems
        expect(instance).to.have.property('queryPriceTableItems');
        // expect(instance.queryPriceTableItems).to.be(expectedValueLiteral);
      });

      it('should have the property queryPriceTableItemsIsEnable (base name: "queryPriceTableItemsIsEnable")', function() {
        // TODO: update the code to test the property queryPriceTableItemsIsEnable
        expect(instance).to.have.property('queryPriceTableItemsIsEnable');
        // expect(instance.queryPriceTableItemsIsEnable).to.be(expectedValueLiteral);
      });

      it('should have the property queryPriceTables (base name: "queryPriceTables")', function() {
        // TODO: update the code to test the property queryPriceTables
        expect(instance).to.have.property('queryPriceTables');
        // expect(instance.queryPriceTables).to.be(expectedValueLiteral);
      });

      it('should have the property queryPriceTablesIsEnable (base name: "queryPriceTablesIsEnable")', function() {
        // TODO: update the code to test the property queryPriceTablesIsEnable
        expect(instance).to.have.property('queryPriceTablesIsEnable');
        // expect(instance.queryPriceTablesIsEnable).to.be(expectedValueLiteral);
      });

      it('should have the property queryProductGroups (base name: "queryProductGroups")', function() {
        // TODO: update the code to test the property queryProductGroups
        expect(instance).to.have.property('queryProductGroups');
        // expect(instance.queryProductGroups).to.be(expectedValueLiteral);
      });

      it('should have the property queryProductGroupsIsEnable (base name: "queryProductGroupsIsEnable")', function() {
        // TODO: update the code to test the property queryProductGroupsIsEnable
        expect(instance).to.have.property('queryProductGroupsIsEnable');
        // expect(instance.queryProductGroupsIsEnable).to.be(expectedValueLiteral);
      });

      it('should have the property queryProductLines (base name: "queryProductLines")', function() {
        // TODO: update the code to test the property queryProductLines
        expect(instance).to.have.property('queryProductLines');
        // expect(instance.queryProductLines).to.be(expectedValueLiteral);
      });

      it('should have the property queryProductLinesIsEnable (base name: "queryProductLinesIsEnable")', function() {
        // TODO: update the code to test the property queryProductLinesIsEnable
        expect(instance).to.have.property('queryProductLinesIsEnable');
        // expect(instance.queryProductLinesIsEnable).to.be(expectedValueLiteral);
      });

      it('should have the property queryProducts (base name: "queryProducts")', function() {
        // TODO: update the code to test the property queryProducts
        expect(instance).to.have.property('queryProducts');
        // expect(instance.queryProducts).to.be(expectedValueLiteral);
      });

      it('should have the property queryProductsIsEnable (base name: "queryProductsIsEnable")', function() {
        // TODO: update the code to test the property queryProductsIsEnable
        expect(instance).to.have.property('queryProductsIsEnable');
        // expect(instance.queryProductsIsEnable).to.be(expectedValueLiteral);
      });

      it('should have the property queryUsers (base name: "queryUsers")', function() {
        // TODO: update the code to test the property queryUsers
        expect(instance).to.have.property('queryUsers');
        // expect(instance.queryUsers).to.be(expectedValueLiteral);
      });

      it('should have the property queryUsersIsEnable (base name: "queryUsersIsEnable")', function() {
        // TODO: update the code to test the property queryUsersIsEnable
        expect(instance).to.have.property('queryUsersIsEnable');
        // expect(instance.queryUsersIsEnable).to.be(expectedValueLiteral);
      });

      it('should have the property queryVehicleTypes (base name: "queryVehicleTypes")', function() {
        // TODO: update the code to test the property queryVehicleTypes
        expect(instance).to.have.property('queryVehicleTypes');
        // expect(instance.queryVehicleTypes).to.be(expectedValueLiteral);
      });

      it('should have the property queryVehicleTypesIsEnable (base name: "queryVehicleTypesIsEnable")', function() {
        // TODO: update the code to test the property queryVehicleTypesIsEnable
        expect(instance).to.have.property('queryVehicleTypesIsEnable');
        // expect(instance.queryVehicleTypesIsEnable).to.be(expectedValueLiteral);
      });

      it('should have the property queryDistribuitionCenterClientAddress (base name: "queryDistribuitionCenterClientAddress")', function() {
        // TODO: update the code to test the property queryDistribuitionCenterClientAddress
        expect(instance).to.have.property('queryDistribuitionCenterClientAddress');
        // expect(instance.queryDistribuitionCenterClientAddress).to.be(expectedValueLiteral);
      });

      it('should have the property queryDistribuitionCenterClientAddressIsEnable (base name: "queryDistribuitionCenterClientAddressIsEnable")', function() {
        // TODO: update the code to test the property queryDistribuitionCenterClientAddressIsEnable
        expect(instance).to.have.property('queryDistribuitionCenterClientAddressIsEnable');
        // expect(instance.queryDistribuitionCenterClientAddressIsEnable).to.be(expectedValueLiteral);
      });

      it('should have the property queryFreightConversionFactor (base name: "queryFreightConversionFactor")', function() {
        // TODO: update the code to test the property queryFreightConversionFactor
        expect(instance).to.have.property('queryFreightConversionFactor');
        // expect(instance.queryFreightConversionFactor).to.be(expectedValueLiteral);
      });

      it('should have the property queryFreightConversionFactorIsEnable (base name: "queryFreightConversionFactorIsEnable")', function() {
        // TODO: update the code to test the property queryFreightConversionFactorIsEnable
        expect(instance).to.have.property('queryFreightConversionFactorIsEnable');
        // expect(instance.queryFreightConversionFactorIsEnable).to.be(expectedValueLiteral);
      });

      it('should have the property queryDiscountRule (base name: "queryDiscountRule")', function() {
        // TODO: update the code to test the property queryDiscountRule
        expect(instance).to.have.property('queryDiscountRule');
        // expect(instance.queryDiscountRule).to.be(expectedValueLiteral);
      });

      it('should have the property queryDiscountRuleIsEnable (base name: "queryDiscountRuleIsEnable")', function() {
        // TODO: update the code to test the property queryDiscountRuleIsEnable
        expect(instance).to.have.property('queryDiscountRuleIsEnable');
        // expect(instance.queryDiscountRuleIsEnable).to.be(expectedValueLiteral);
      });

      it('should have the property queryCommission (base name: "queryCommission")', function() {
        // TODO: update the code to test the property queryCommission
        expect(instance).to.have.property('queryCommission');
        // expect(instance.queryCommission).to.be(expectedValueLiteral);
      });

      it('should have the property queryCommissionIsEnable (base name: "queryCommissionIsEnable")', function() {
        // TODO: update the code to test the property queryCommissionIsEnable
        expect(instance).to.have.property('queryCommissionIsEnable');
        // expect(instance.queryCommissionIsEnable).to.be(expectedValueLiteral);
      });

      it('should have the property queryReasonCancel (base name: "queryReasonCancel")', function() {
        // TODO: update the code to test the property queryReasonCancel
        expect(instance).to.have.property('queryReasonCancel');
        // expect(instance.queryReasonCancel).to.be(expectedValueLiteral);
      });

      it('should have the property queryReasonCancelIsEnable (base name: "queryReasonCancelIsEnable")', function() {
        // TODO: update the code to test the property queryReasonCancelIsEnable
        expect(instance).to.have.property('queryReasonCancelIsEnable');
        // expect(instance.queryReasonCancelIsEnable).to.be(expectedValueLiteral);
      });

      it('should have the property queryPriceTableUnloading (base name: "queryPriceTableUnloading")', function() {
        // TODO: update the code to test the property queryPriceTableUnloading
        expect(instance).to.have.property('queryPriceTableUnloading');
        // expect(instance.queryPriceTableUnloading).to.be(expectedValueLiteral);
      });

      it('should have the property queryPriceTableUnloadingIsEnable (base name: "queryPriceTableUnloadingIsEnable")', function() {
        // TODO: update the code to test the property queryPriceTableUnloadingIsEnable
        expect(instance).to.have.property('queryPriceTableUnloadingIsEnable');
        // expect(instance.queryPriceTableUnloadingIsEnable).to.be(expectedValueLiteral);
      });

    });
  });

}));
