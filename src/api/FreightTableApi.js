/*
 * Tep.Sales.Service API
 * Tep.Sales.Service API
 *
 * OpenAPI spec version: v1
 * Contact: admin@tecnoepec.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {ErrorDetails} from '../model/ErrorDetails';
import {FreightTableStatus} from '../model/FreightTableStatus';
import {GetAllFreightTableResponse} from '../model/GetAllFreightTableResponse';
import {GetAllPagedFreightTableResponse} from '../model/GetAllPagedFreightTableResponse';
import {Operation} from '../model/Operation';
import {PostFreightTableRequest} from '../model/PostFreightTableRequest';
import {PostFreightTableResponse} from '../model/PostFreightTableResponse';
import {PutFreightTableRequest} from '../model/PutFreightTableRequest';
import {TablePriceOperationTypeEnum} from '../model/TablePriceOperationTypeEnum';

/**
* FreightTable service.
* @module api/FreightTableApi
* @version v1
*/
export class FreightTableApi {

    /**
    * Constructs a new FreightTableApi. 
    * @alias module:api/FreightTableApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getByIdFreightTable operation.
     * @callback moduleapi/FreightTableApi~getByIdFreightTableCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAllFreightTableResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get FreightTable by id
     * @param {String} id FreightTable id
     * @param {Object} opts Optional parameters
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/FreightTableApi~getByIdFreightTableCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getByIdFreightTable(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getByIdFreightTable");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAllFreightTableResponse;

      return this.apiClient.callApi(
        '/tepsales/v1/freightTables/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1FreightTablesAllGet operation.
     * @callback moduleapi/FreightTableApi~tepsalesV1FreightTablesAllGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetAllFreightTableResponse>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get All FreightTable by filter
     * @param {Object} opts Optional parameters
     * @param {String} opts.externalCode 
     * @param {String} opts.paymentConditionId 
     * @param {String} opts.vehicleTypeId 
     * @param {Number} opts.kilometers 
     * @param {Boolean} opts.isFractional 
     * @param {module:model/TablePriceOperationTypeEnum} opts.operationType 
     * @param {module:model/FreightTableStatus} opts.status 
     * @param {Number} opts.limit limit (default to <.>)
     * @param {String} opts.sort Sorting atributes, sample: id.desc,name.asc (default to <.>)
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/FreightTableApi~tepsalesV1FreightTablesAllGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    tepsalesV1FreightTablesAllGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'externalCode': opts['externalCode'],'paymentConditionId': opts['paymentConditionId'],'vehicleTypeId': opts['vehicleTypeId'],'kilometers': opts['kilometers'],'isFractional': opts['isFractional'],'operationType': opts['operationType'],'status': opts['status'],'limit': opts['limit'],'sort': opts['sort']
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetAllFreightTableResponse];

      return this.apiClient.callApi(
        '/tepsales/v1/freightTables/all', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1FreightTablesIdDelete operation.
     * @callback moduleapi/FreightTableApi~tepsalesV1FreightTablesIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete FreightTable by Id
     * @param {String} id FreightTable id
     * @param {Object} opts Optional parameters
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/FreightTableApi~tepsalesV1FreightTablesIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    tepsalesV1FreightTablesIdDelete(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling tepsalesV1FreightTablesIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/tepsales/v1/freightTables/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1FreightTablesIdPatch operation.
     * @callback moduleapi/FreightTableApi~tepsalesV1FreightTablesIdPatchCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update part of FreightTable
     * Sample request:                    PATCH /tepsales/v1/FreightTable/{id}      [          {              \&quot;op\&quot;: \&quot;replace\&quot;,              \&quot;path\&quot;: \&quot;/atribute_name\&quot;,              \&quot;value\&quot;: \&quot;new value\&quot;          }      ]
     * @param {Array.<module:model/Operation>} body Atributes values
     * @param {String} id FreightTable id
     * @param {Object} opts Optional parameters
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/FreightTableApi~tepsalesV1FreightTablesIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     */
    tepsalesV1FreightTablesIdPatch(body, id, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling tepsalesV1FreightTablesIdPatch");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling tepsalesV1FreightTablesIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/tepsales/v1/freightTables/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1FreightTablesIdPut operation.
     * @callback moduleapi/FreightTableApi~tepsalesV1FreightTablesIdPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update FreightTable
     * @param {String} id FreightTable Id
     * @param {Object} opts Optional parameters
     * @param {module:model/PutFreightTableRequest} opts.body FreightTable to update
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/FreightTableApi~tepsalesV1FreightTablesIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    tepsalesV1FreightTablesIdPut(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling tepsalesV1FreightTablesIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/tepsales/v1/freightTables/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1FreightTablesPagedGet operation.
     * @callback moduleapi/FreightTableApi~tepsalesV1FreightTablesPagedGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAllPagedFreightTableResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get All FreightTable by filter with pagination
     * @param {Object} opts Optional parameters
     * @param {String} opts.externalCode 
     * @param {String} opts.paymentConditionId 
     * @param {String} opts.vehicleTypeId 
     * @param {Number} opts.kilometers 
     * @param {Boolean} opts.isFractional 
     * @param {module:model/TablePriceOperationTypeEnum} opts.operationType 
     * @param {module:model/FreightTableStatus} opts.status 
     * @param {Number} opts.page 
     * @param {Number} opts.pageSize 
     * @param {String} opts.sort Sorting atributes, sample: id.desc,name.asc (default to <.>)
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/FreightTableApi~tepsalesV1FreightTablesPagedGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    tepsalesV1FreightTablesPagedGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'externalCode': opts['externalCode'],'paymentConditionId': opts['paymentConditionId'],'vehicleTypeId': opts['vehicleTypeId'],'kilometers': opts['kilometers'],'isFractional': opts['isFractional'],'operationType': opts['operationType'],'status': opts['status'],'page': opts['page'],'pageSize': opts['pageSize'],'sort': opts['sort']
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAllPagedFreightTableResponse;

      return this.apiClient.callApi(
        '/tepsales/v1/freightTables/paged', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1FreightTablesPost operation.
     * @callback moduleapi/FreightTableApi~tepsalesV1FreightTablesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostFreightTableResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create FreightTable
     * @param {Object} opts Optional parameters
     * @param {module:model/PostFreightTableRequest} opts.body FreightTable to create
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/FreightTableApi~tepsalesV1FreightTablesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    tepsalesV1FreightTablesPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostFreightTableResponse;

      return this.apiClient.callApi(
        '/tepsales/v1/freightTables', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}