/*
 * Tep.Sales.Service API
 * Tep.Sales.Service API
 *
 * OpenAPI spec version: v1
 * Contact: admin@tecnoepec.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {ErrorDetails} from '../model/ErrorDetails';
import {GetAllPagedPaymentPriceTableResponse} from '../model/GetAllPagedPaymentPriceTableResponse';
import {GetAllPaymentPriceTableResponse} from '../model/GetAllPaymentPriceTableResponse';
import {Operation} from '../model/Operation';
import {PaymentPriceTableStatus} from '../model/PaymentPriceTableStatus';
import {PostPaymentPriceTableRequest} from '../model/PostPaymentPriceTableRequest';
import {PostPaymentPriceTableResponse} from '../model/PostPaymentPriceTableResponse';
import {PutPaymentPriceTableRequest} from '../model/PutPaymentPriceTableRequest';

/**
* PaymentPriceTable service.
* @module api/PaymentPriceTableApi
* @version v1
*/
export class PaymentPriceTableApi {

    /**
    * Constructs a new PaymentPriceTableApi. 
    * @alias module:api/PaymentPriceTableApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getByIdPaymentPriceTable operation.
     * @callback moduleapi/PaymentPriceTableApi~getByIdPaymentPriceTableCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAllPaymentPriceTableResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get PaymentPriceTable by id
     * @param {String} id PaymentPriceTable id
     * @param {Object} opts Optional parameters
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/PaymentPriceTableApi~getByIdPaymentPriceTableCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getByIdPaymentPriceTable(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getByIdPaymentPriceTable");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAllPaymentPriceTableResponse;

      return this.apiClient.callApi(
        '/tepsales/v1/paymentPriceTables/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1PaymentPriceTablesAllGet operation.
     * @callback moduleapi/PaymentPriceTableApi~tepsalesV1PaymentPriceTablesAllGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetAllPaymentPriceTableResponse>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get All PaymentPriceTable by filter
     * @param {Object} opts Optional parameters
     * @param {String} opts.paymentConditionId 
     * @param {String} opts.priceTableId 
     * @param {String} opts.externalCode 
     * @param {module:model/PaymentPriceTableStatus} opts.status 
     * @param {Number} opts.limit limit (default to <.>)
     * @param {String} opts.sort Sorting atributes, sample: id.desc,name.asc (default to <.>)
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/PaymentPriceTableApi~tepsalesV1PaymentPriceTablesAllGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    tepsalesV1PaymentPriceTablesAllGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'paymentConditionId': opts['paymentConditionId'],'priceTableId': opts['priceTableId'],'externalCode': opts['externalCode'],'status': opts['status'],'limit': opts['limit'],'sort': opts['sort']
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetAllPaymentPriceTableResponse];

      return this.apiClient.callApi(
        '/tepsales/v1/paymentPriceTables/all', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1PaymentPriceTablesIdDelete operation.
     * @callback moduleapi/PaymentPriceTableApi~tepsalesV1PaymentPriceTablesIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete PaymentPriceTable by Id
     * @param {String} id PaymentPriceTable id
     * @param {Object} opts Optional parameters
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/PaymentPriceTableApi~tepsalesV1PaymentPriceTablesIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    tepsalesV1PaymentPriceTablesIdDelete(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling tepsalesV1PaymentPriceTablesIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/tepsales/v1/paymentPriceTables/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1PaymentPriceTablesIdPatch operation.
     * @callback moduleapi/PaymentPriceTableApi~tepsalesV1PaymentPriceTablesIdPatchCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update part of PaymentPriceTable
     * Sample request:                    PATCH /tepsales/v1/PaymentPriceTable/{id}      [          {              \&quot;op\&quot;: \&quot;replace\&quot;,              \&quot;path\&quot;: \&quot;/atribute_name\&quot;,              \&quot;value\&quot;: \&quot;new value\&quot;          }      ]
     * @param {Array.<module:model/Operation>} body Atributes values
     * @param {String} id PaymentPriceTable id
     * @param {Object} opts Optional parameters
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/PaymentPriceTableApi~tepsalesV1PaymentPriceTablesIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     */
    tepsalesV1PaymentPriceTablesIdPatch(body, id, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling tepsalesV1PaymentPriceTablesIdPatch");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling tepsalesV1PaymentPriceTablesIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/tepsales/v1/paymentPriceTables/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1PaymentPriceTablesIdPut operation.
     * @callback moduleapi/PaymentPriceTableApi~tepsalesV1PaymentPriceTablesIdPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update PaymentPriceTable
     * @param {String} id PaymentPriceTable Id
     * @param {Object} opts Optional parameters
     * @param {module:model/PutPaymentPriceTableRequest} opts.body PaymentPriceTable to update
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/PaymentPriceTableApi~tepsalesV1PaymentPriceTablesIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    tepsalesV1PaymentPriceTablesIdPut(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling tepsalesV1PaymentPriceTablesIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/tepsales/v1/paymentPriceTables/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1PaymentPriceTablesPagedGet operation.
     * @callback moduleapi/PaymentPriceTableApi~tepsalesV1PaymentPriceTablesPagedGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAllPagedPaymentPriceTableResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get All PaymentPriceTable by filter with pagination
     * @param {Object} opts Optional parameters
     * @param {String} opts.paymentConditionId 
     * @param {String} opts.priceTableId 
     * @param {String} opts.externalCode 
     * @param {module:model/PaymentPriceTableStatus} opts.status 
     * @param {Number} opts.page 
     * @param {Number} opts.pageSize 
     * @param {String} opts.sort Sorting atributes, sample: id.desc,name.asc (default to <.>)
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/PaymentPriceTableApi~tepsalesV1PaymentPriceTablesPagedGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    tepsalesV1PaymentPriceTablesPagedGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'paymentConditionId': opts['paymentConditionId'],'priceTableId': opts['priceTableId'],'externalCode': opts['externalCode'],'status': opts['status'],'page': opts['page'],'pageSize': opts['pageSize'],'sort': opts['sort']
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAllPagedPaymentPriceTableResponse;

      return this.apiClient.callApi(
        '/tepsales/v1/paymentPriceTables/paged', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1PaymentPriceTablesPost operation.
     * @callback moduleapi/PaymentPriceTableApi~tepsalesV1PaymentPriceTablesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostPaymentPriceTableResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create PaymentPriceTable
     * @param {Object} opts Optional parameters
     * @param {module:model/PostPaymentPriceTableRequest} opts.body PaymentPriceTable to create
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/PaymentPriceTableApi~tepsalesV1PaymentPriceTablesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    tepsalesV1PaymentPriceTablesPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostPaymentPriceTableResponse;

      return this.apiClient.callApi(
        '/tepsales/v1/paymentPriceTables', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}