/*
 * Tep.Sales.Service API
 * Tep.Sales.Service API
 *
 * OpenAPI spec version: v1
 * Contact: admin@tecnoepec.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {ErrorDetails} from '../model/ErrorDetails';
import {GetAllDistribuitionCenterResponse} from '../model/GetAllDistribuitionCenterResponse';
import {GetAllPagedDistribuitionCenterResponse} from '../model/GetAllPagedDistribuitionCenterResponse';
import {Operation} from '../model/Operation';
import {PostDistribuitionCenterRequest} from '../model/PostDistribuitionCenterRequest';
import {PostDistribuitionCenterResponse} from '../model/PostDistribuitionCenterResponse';
import {PutDistribuitionCenterRequest} from '../model/PutDistribuitionCenterRequest';

/**
* DistribuitionCenter service.
* @module api/DistribuitionCenterApi
* @version v1
*/
export class DistribuitionCenterApi {

    /**
    * Constructs a new DistribuitionCenterApi. 
    * @alias module:api/DistribuitionCenterApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getByIdDistribuitionCenter operation.
     * @callback moduleapi/DistribuitionCenterApi~getByIdDistribuitionCenterCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAllDistribuitionCenterResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get DistribuitionCenter by id
     * @param {String} id DistribuitionCenter id
     * @param {Object} opts Optional parameters
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/DistribuitionCenterApi~getByIdDistribuitionCenterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getByIdDistribuitionCenter(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getByIdDistribuitionCenter");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAllDistribuitionCenterResponse;

      return this.apiClient.callApi(
        '/tepsales/v1/distribuitionsCenters/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1DistribuitionsCentersAllGet operation.
     * @callback moduleapi/DistribuitionCenterApi~tepsalesV1DistribuitionsCentersAllGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetAllDistribuitionCenterResponse>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get All DistribuitionCenter by filter
     * @param {Object} opts Optional parameters
     * @param {String} opts.name 
     * @param {String} opts.document 
     * @param {String} opts.externalCode 
     * @param {Number} opts.limit limit (default to <.>)
     * @param {String} opts.sort Sorting atributes, sample: id.desc,name.asc (default to <.>)
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/DistribuitionCenterApi~tepsalesV1DistribuitionsCentersAllGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    tepsalesV1DistribuitionsCentersAllGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'name': opts['name'],'document': opts['document'],'externalCode': opts['externalCode'],'limit': opts['limit'],'sort': opts['sort']
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetAllDistribuitionCenterResponse];

      return this.apiClient.callApi(
        '/tepsales/v1/distribuitionsCenters/all', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1DistribuitionsCentersIdDelete operation.
     * @callback moduleapi/DistribuitionCenterApi~tepsalesV1DistribuitionsCentersIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete DistribuitionCenter by Id
     * @param {String} id DistribuitionCenter id
     * @param {Object} opts Optional parameters
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/DistribuitionCenterApi~tepsalesV1DistribuitionsCentersIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    tepsalesV1DistribuitionsCentersIdDelete(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling tepsalesV1DistribuitionsCentersIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/tepsales/v1/distribuitionsCenters/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1DistribuitionsCentersIdPatch operation.
     * @callback moduleapi/DistribuitionCenterApi~tepsalesV1DistribuitionsCentersIdPatchCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update part of DistribuitionCenter
     * Sample request:                    PATCH /tepsales/v1/DistribuitionCenter/{id}      [          {              \&quot;op\&quot;: \&quot;replace\&quot;,              \&quot;path\&quot;: \&quot;/atribute_name\&quot;,              \&quot;value\&quot;: \&quot;new value\&quot;          }      ]
     * @param {Array.<module:model/Operation>} body Atributes values
     * @param {String} id DistribuitionCenter id
     * @param {Object} opts Optional parameters
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/DistribuitionCenterApi~tepsalesV1DistribuitionsCentersIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     */
    tepsalesV1DistribuitionsCentersIdPatch(body, id, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling tepsalesV1DistribuitionsCentersIdPatch");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling tepsalesV1DistribuitionsCentersIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/tepsales/v1/distribuitionsCenters/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1DistribuitionsCentersIdPut operation.
     * @callback moduleapi/DistribuitionCenterApi~tepsalesV1DistribuitionsCentersIdPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update DistribuitionCenter
     * @param {String} id DistribuitionCenter Id
     * @param {Object} opts Optional parameters
     * @param {module:model/PutDistribuitionCenterRequest} opts.body DistribuitionCenter to update
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/DistribuitionCenterApi~tepsalesV1DistribuitionsCentersIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    tepsalesV1DistribuitionsCentersIdPut(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling tepsalesV1DistribuitionsCentersIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/tepsales/v1/distribuitionsCenters/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1DistribuitionsCentersPagedGet operation.
     * @callback moduleapi/DistribuitionCenterApi~tepsalesV1DistribuitionsCentersPagedGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAllPagedDistribuitionCenterResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get All DistribuitionCenter by filter with pagination
     * @param {Object} opts Optional parameters
     * @param {String} opts.name 
     * @param {String} opts.document 
     * @param {String} opts.externalCode 
     * @param {Number} opts.page 
     * @param {Number} opts.pageSize 
     * @param {String} opts.sort Sorting atributes, sample: id.desc,name.asc (default to <.>)
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/DistribuitionCenterApi~tepsalesV1DistribuitionsCentersPagedGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    tepsalesV1DistribuitionsCentersPagedGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'name': opts['name'],'document': opts['document'],'externalCode': opts['externalCode'],'page': opts['page'],'pageSize': opts['pageSize'],'sort': opts['sort']
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAllPagedDistribuitionCenterResponse;

      return this.apiClient.callApi(
        '/tepsales/v1/distribuitionsCenters/paged', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1DistribuitionsCentersPost operation.
     * @callback moduleapi/DistribuitionCenterApi~tepsalesV1DistribuitionsCentersPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostDistribuitionCenterResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create DistribuitionCenter
     * @param {Object} opts Optional parameters
     * @param {module:model/PostDistribuitionCenterRequest} opts.body DistribuitionCenter to create
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/DistribuitionCenterApi~tepsalesV1DistribuitionsCentersPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    tepsalesV1DistribuitionsCentersPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostDistribuitionCenterResponse;

      return this.apiClient.callApi(
        '/tepsales/v1/distribuitionsCenters', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}