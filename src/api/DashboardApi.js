/*
 * Tep.Sales.Service API
 * Tep.Sales.Service API
 *
 * OpenAPI spec version: v1
 * Contact: admin@tecnoepec.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {ErrorDetails} from '../model/ErrorDetails';
import {GetWidgetsDto} from '../model/GetWidgetsDto';
import {GroupPurchaseOrderDto} from '../model/GroupPurchaseOrderDto';

/**
* Dashboard service.
* @module api/DashboardApi
* @version v1
*/
export class DashboardApi {

    /**
    * Constructs a new DashboardApi. 
    * @alias module:api/DashboardApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the tepsalesV1DashboardPurchaseorderbysalesmanGet operation.
     * @callback moduleapi/DashboardApi~tepsalesV1DashboardPurchaseorderbysalesmanGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GroupPurchaseOrderDto{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get GetPurchaseOrderBySalesman
     * @param {Object} opts Optional parameters
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/DashboardApi~tepsalesV1DashboardPurchaseorderbysalesmanGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    tepsalesV1DashboardPurchaseorderbysalesmanGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GroupPurchaseOrderDto;

      return this.apiClient.callApi(
        '/tepsales/v1/dashboard/purchaseorderbysalesman', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1DashboardPurchaseorderfavoriteproductsGet operation.
     * @callback moduleapi/DashboardApi~tepsalesV1DashboardPurchaseorderfavoriteproductsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GroupPurchaseOrderDto{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get GroupPurchaseOrderByStatus
     * @param {Object} opts Optional parameters
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/DashboardApi~tepsalesV1DashboardPurchaseorderfavoriteproductsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    tepsalesV1DashboardPurchaseorderfavoriteproductsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GroupPurchaseOrderDto;

      return this.apiClient.callApi(
        '/tepsales/v1/dashboard/purchaseorderfavoriteproducts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1DashboardPurchaseorderlastsixmonthsGet operation.
     * @callback moduleapi/DashboardApi~tepsalesV1DashboardPurchaseorderlastsixmonthsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GroupPurchaseOrderDto{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get GroupPurchaseOrderByStatus
     * @param {Object} opts Optional parameters
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/DashboardApi~tepsalesV1DashboardPurchaseorderlastsixmonthsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    tepsalesV1DashboardPurchaseorderlastsixmonthsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GroupPurchaseOrderDto;

      return this.apiClient.callApi(
        '/tepsales/v1/dashboard/purchaseorderlastsixmonths', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1DashboardPurchaseorderstatusGet operation.
     * @callback moduleapi/DashboardApi~tepsalesV1DashboardPurchaseorderstatusGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GroupPurchaseOrderDto{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get GroupPurchaseOrderByStatus
     * @param {Object} opts Optional parameters
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/DashboardApi~tepsalesV1DashboardPurchaseorderstatusGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    tepsalesV1DashboardPurchaseorderstatusGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GroupPurchaseOrderDto;

      return this.apiClient.callApi(
        '/tepsales/v1/dashboard/purchaseorderstatus', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tepsalesV1DashboardWidgetsGet operation.
     * @callback moduleapi/DashboardApi~tepsalesV1DashboardWidgetsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetWidgetsDto{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Widgets
     * @param {Object} opts Optional parameters
     * @param {String} opts.xApiKey Your Api Key
     * @param {String} opts.xCsrfToken CSRF Protection (default to <.>)
     * @param {module:api/DashboardApi~tepsalesV1DashboardWidgetsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    tepsalesV1DashboardWidgetsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        'x-api-key': opts['xApiKey'],'x-csrf-token': opts['xCsrfToken']
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetWidgetsDto;

      return this.apiClient.callApi(
        '/tepsales/v1/dashboard/widgets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}